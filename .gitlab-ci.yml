stages:
  - Test
  - BuildJar
  - Sonar
  - BuildDockerImage
  - release
  - deploy

variables:
  TEST_IMAGE: https://dockerreg.local:5000/ms-iam:$CI_COMMIT_REF_NAME
  RELEASE_IMAGE: https://dockerreg.local:5000/ms-iam:latest
  DOCKER_DRIVER: overlay2


build-jarfile-tst:
  image: https://dockerreg.local:5000/mvn-archaiva:latest
  stage: BuildJar
  tags:
    - build
  artifacts:
    paths:
      - ./target/ms-iam-*.jar
    expire_in: 1 week
  script:
    - whoami
    - java -version
    - ls -lah
    - mvn clean package -Ptst -DskipTests
    - ls -lah ./target
  only:
    - develop

build-dockerfile-tst:
  stage: BuildDockerImage
  tags:
    - build
  script:
    - whoami
    - docker login -u root -p 12345678 https://dockerreg.local:5000
    - docker build -f ./cicd/Dockerfile-tst --pull -t $TEST_IMAGE .
    - docker push $TEST_IMAGE
  only:
    - develop

release-on-tst:
  image: https://dockerreg.local:5000/tiangolo-compose
  stage: release
  tags:
    - deploy
  script:
    - docker  rm -f ms-iam  || true
    - docker login -u root -p 12345678 https://dockerreg.local:5000
    - docker pull $TEST_IMAGE
    - docker images
    - docker-compose -f ./cicd/deploy-tst.yml up -d
    - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
  only:
    - develop



build-jarfile-prod:
  image: https://dockerreg.local:5000/mvn-archaiva:latest
  stage: BuildJar
  tags:
    - build
  artifacts:
    paths:
      - ./target
    expire_in: 1 week
  script:
    - whoami
    - java -version
    - ls -lah
    - mvn clean package -Pprod -DskipTests
    - ls -lah ./target
  only:
    - master

sonar-prod:
  image: https://dockerreg.local:5000/mvn-archaiva:latest
  stage: Sonar
  tags:
    - build
  artifacts:
    paths:
      - ./target
    expire_in: 1 week
  script:
    - mvn sonar:sonar -Dsonar.projectKey=ms-iam -Dsonar.host.url=https://sonar.local.ir -Dsonar.login=87a95463ba00e06f15c2bba9ef6ad38a853546e0
  only:
    - master

build-dockerfile-prod:
  stage: BuildDockerImage
  tags:
    - build
  script:
    - whoami
    - docker login -u root -p 12345678 https://dockerreg.local:5000
    - docker build -f ./cicd/Dockerfile-prod --pull  -t $RELEASE_IMAGE .
    - docker push $RELEASE_IMAGE
  only:
    - master

release-on-prod:
  image: https://dockerreg.local:5000/tiangolo-compose
  stage: release
  tags:
    - production
  script:
    - docker rm -f ms-iam  || true
    - docker login -u root -p 12345678 https://dockerreg.local:5000
    - docker pull $RELEASE_IMAGE
    - docker images
    - docker-compose -f ./cicd/deploy-prod.yml up -d
    - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
  only:
    - master